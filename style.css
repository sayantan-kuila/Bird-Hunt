body{
    margin: 0;
    padding: 0;
    /* cursor: url('img/aim1.png') , text; */
    overflow: hidden;
}
body:before
{
    content:'';
    display: block;
    position: fixed;
    width: 100%;
    height: 100%;
    z-index: 1;
    background:url(img/bg2.jpg) repeat-x bottom left;
}

@keyframes duckfly {
    0%
    {
        left: 150%;
        top: 10%;
    }
    25%
    {
        left: 80%;
        top: 50%;
    }
    50%
    {
        left: 50%;
        top: 30%;
    }
    75%
    {
        left: 40%;
        top: 30%;
    }
    100%
    {
        left: -50%;
        top: 10%;
    }

}

input+label{
    position: absolute;
    left: -100%;
    z-index: 1;
    width: 36px;
    height: 34px;
    display: block;
    z-index: 5;
    transform: translate(-50%,-50%);
    background: url(img/bird4.gif) no-repeat left center;
    background-size:auto;
    background-position: -138px 0;
}
input:checked + label
{
    opacity: 0;
    transition: 0.5s;
    transform: rotate(120deg);
    transform-origin: 60%;
    z-index: -5;
}
.duck:nth-last-of-type(1)
{
    animation: duckfly 10s linear 1s infinite;
    /* cursor: url('img/aim1.png') , text; */

}
.duck:nth-last-of-type(2)
{
    animation: duckfly 20s linear 2s infinite;
    /* cursor: url('img/aim1.png') , text; */

}
.duck:nth-last-of-type(3)
{
    animation: duckfly 25s linear 3s infinite;
    /* cursor: url('img/aim1.png') , text; */

}
.duck:nth-last-of-type(4)
{
    animation: duckfly 30s linear 4s infinite;
    /* cursor: url('img/aim1.png') , text; */

}
.duck:nth-last-of-type(5)
{
    animation: duckfly 50s linear 5s infinite;
    /* cursor: url('img/aim1.png') , text; */

}
.score
{
    position: absolute;
    bottom: 0;
    height: 50px;
    line-height: 50px;
    background-color: white;
    width: 100%;
    z-index: 2;
    text-align: center;
    font-size: 30px;
}
.score::after
{
    content: counter(score);
    display: inline-block;

}
.score::before
{
    content: 'Score : ';
    display: inline-block;
    margin: right 10px; ;
}
input:checked
{
    counter-increment: score;

}

